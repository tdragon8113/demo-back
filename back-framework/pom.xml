<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>demo.loong</groupId>
    <artifactId>back-framework</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>back-framework</name>
    <url>http://maven.apache.org</url>
    <description>个人学习demo项目</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- 子模块声明 -->
    <modules>
        <module>../common-core</module>
        <module>../service-api</module>
        <module>../user-service</module>
        <module>../order-service</module>
        <module>../payment-service</module>
        <module>../admin-service</module>
        <module>../gateway</module>
        <module>../security-core</module>
    </modules>

    <!-- 属性管理 -->
    <properties>
        <!--
        父pom文件已默认处理为UTF-8
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        -->

        <!-- 父pom中可以根据java.version处理编译插件编译代码指定的版本 -->
        <!--
           Java 9+ 项目，使用的是<release>
           对于java 8 项目，使用的是<source> + <target>(注：当前spring-boot版本不知道java 8 项目)
        -->
        <java.version>21</java.version>
        <spring.boot.version>3.4.5</spring.boot.version>
        <spring.cloud.version>2024.0.1</spring.cloud.version>
        <spring.cloud.alibaba.version>2023.0.1.0</spring.cloud.alibaba.version>
        <hutool.version>5.8.38</hutool.version>
        <mybatis.version>3.5.12</mybatis.version>
        <druid.version>1.2.24</druid.version>

    </properties>

    <!-- 依赖管理 -->
    <dependencyManagement>
        <dependencies>

<!--            &lt;!&ndash; Spring Boot &ndash;&gt;-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-dependencies</artifactId>-->
<!--                <version>${spring.boot.version}</version>-->
<!--                <scope>import</scope>-->
<!--                <type>pom</type>-->
<!--            </dependency>-->

            <!-- Spring Cloud - 由子模块按需引入即可 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- HuTool 工具 - 由子模块按需引入即可
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                &lt;!&ndash; 注意这里是import &ndash;&gt;
                <scope>import</scope>
            </dependency>-->
            <!-- HuTool工具 - 直接全部引入算了 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- MyBatis Plus - 依赖SQL驱动，当前使用的是MySQL驱动 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-spring-boot3-starter</artifactId>
                <version>${mybatis.version}</version>
                <exclusions>
                    <!-- 排除默认的 HikariCP 数据源 -->
                    <exclusion>
                        <groupId>com.zaxxer</groupId>
                        <artifactId>HikariCP</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- 阿里开源的 druid 数据源 - 用于jdbc连接事的数据源（注意：此 druid 版本适配 Spring Boot 3.0+版本） -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-3-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>




        </dependencies>
    </dependencyManagement>

    <!-- 构建插件管理 -->
    <build>
        <plugins>
            <!-- Maven 编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <!--显式指定 Lombok 注解处理器：此配置确保编译器在编译过程中使用 Lombok 的注解处理器-->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                    </annotationProcessorPaths>
                    <!--编译测试用例代码后，跳过运行测试用例-->
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- Spring Boot 打包插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <!--排除 Lombok 依赖: 确保 Lombok 不会被打包到 Spring Boot 构建的可执行 JAR/WAR 中-->
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

</project>
